name: PVfit public build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10"]

    runs-on:  ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip setuptools wheel
          python -m pip --version
          python -m pip install --progress-bar off .[build,demo,dev,docs,test]
          python -m pip list
      - name: Check formatting with black
        run: |
          black . --check
      - name: Lint with flake8
        run: |
          flake8 .
      - name: Test with pytest
        run: |
          cd pvfit
          pytest --doctest-modules --cov=pvfit --cov-report=html:../htmlcov-${{ matrix.python-version }} --junitxml=../junit/test-results-${{ matrix.python-version }}.xml
      - name: Archive test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        if: ${{ always() }}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report-${{ matrix.python-version }}
          path: htmlcov-${{ matrix.python-version }}
        if: ${{ always() }}
      - name: Build generic source and wheel disributions
        run: |
          check-manifest
          python -m build
      - name: Archive disributions
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.python-version }}
          path: dist